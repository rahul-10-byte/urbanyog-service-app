<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QR Scan Analytics</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-funnel"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 0;
            background-color: #f8f9fa;
        }

        h2,
        h3 {
            text-align: center;
            color: #333;
            margin-bottom: 15px;
        }

        /* Filters Section */
        .filters {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 12px;
            align-items: center;
            margin-bottom: 20px;
            justify-content: center;
        }

        /* Label & Input Wrapping */
        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        /* Labels */
        .filters label {
            font-weight: bold;
            font-size: 14px;
            display: block;
            text-align: left;
        }

        /* Styling Inputs, Selects, and Buttons */
        .filters input,
        .filters select,
        .filters button {
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 6px;
            width: 100%;
            transition: all 0.3s ease;
        }

        /* Buttons */
        .filters button {
            background-color: #28a745;
            color: white;
            border: none;
            cursor: pointer;
            font-weight: bold;
            padding: 10px 15px;
        }

        .filters button:hover {
            background-color: #218838;
            transform: scale(1.05);
        }

        /* Mobile View - Stack Elements */
        @media (max-width: 768px) {
            .filters {
                grid-template-columns: 1fr;
            }

            .filters label {
                font-size: 14px;
            }

            .filters input,
            .filters select,
            .filters button {
                width: 100%;
                /* Ensures full width on small screens */
            }
        }

        /* Table Styling */
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            background: white;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
            border-radius: 6px;
            overflow: hidden;
        }

        th,
        td {
            padding: 12px;
            text-align: center;
            border: 1px solid #ddd;
        }

        th {
            background-color: #007bff;
            color: white;
            font-weight: bold;
            text-transform: uppercase;
        }

        td {
            background-color: #ffffff;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        /* Chart Container */
        .chart-container {
            width: 90%;
            max-width: 800px;
            margin: auto;
            background: white;
            padding: 20px;
            border-radius: 6px;
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        /* General Input Styling */
        label {
            font-weight: bold;
        }

        input,
        select,
        button {
            padding: 10px;
            border-radius: 6px;
            border: 1px solid #ccc;
            font-size: 16px;
        }

        /* Button Hover Effect */
        button {
            background-color: #28a745;
            color: white;
            cursor: pointer;
            transition: 0.3s;
        }

        button:hover {
            background-color: #218838;
            transform: scale(1.05);
        }
    </style>
</head>

<body>

    <h2>QR Scan Analytics</h2>

    <!-- Date Range Filter -->
    <label for="startDate">Start Date:</label>
    <input type="date" id="startDate" value="{{startDate}}">

    <label for="endDate">End Date:</label>
    <input type="date" id="endDate" value="{{endDate}}">

    <label for="platform">Platform:</label>
    <select id="platform">
        <option value="">All</option>
        <option value="Amazon">Amazon</option>
        <option value="Flipkart">Flipkart</option>
        <option value="Myntra">Myntra</option>
        <option value="Nykaa">Nykaa</option>
        <option value="Meesho">Meesho</option>
        <option value="UrbanYog Website">UrbanYog Website</option>
        <option value="Others">Others</option>
    </select>

    <button onclick="fetchData()">Filter</button>

    <!-- Total QR Scans Table -->
    <h3>Total QR Scans Per Day</h3>
    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Scan Count</th>
            </tr>
        </thead>
        <tbody id="qrScanTable">
            {{#each total_qr_scans}}
            <tr>
                <td>{{this.date}}</td>
                <td>{{this.scan_count}}</td>
            </tr>
            {{/each}}
        </tbody>
    </table>

    <!-- Product Scans Per Day -->
    <h3>Links Clicked Per Day</h3>
    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Click Count</th>
            </tr>
        </thead>
        <tbody id="productScanTable">
            {{#each product_scans.day_wise}}
            <tr>
                <td>{{this.date}}</td>
                <td>{{this.scan_count}}</td>
            </tr>
            {{/each}}
        </tbody>
    </table>

    <!-- Product Scans Product-Wise -->
    <h3>Product Scans by Product</h3>
    <table>
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Scan Count</th>
            </tr>
        </thead>
        <tbody id="productWiseTable">
            {{#each product_scans.product_wise}}
            <tr>
                <td>{{this.bought_product}}</td>
                <td>{{this.scan_count}}</td>
            </tr>
            {{/each}}
        </tbody>
    </table>

    <!-- Product Scans Platform-Wise -->
    <h3>Product Scans by Platform</h3>
    <table>
        <thead>
            <tr>
                <th>Platform</th>
                <th>Scan Count</th>
            </tr>
        </thead>
        <tbody id="platformWiseTable">
            {{#each product_scans.platform_wise}}
            <tr>
                <td>{{this.bought_from}}</td>
                <td>{{this.scan_count}}</td>
            </tr>
            {{/each}}
        </tbody>
    </table>

    <!-- Combined QR Scans & Links Clicked Per Product -->
    <h3>QR Scans and Links Clicked Per Product</h3>
    <table>
        <thead>
            <tr>
                <th>Product Name</th>
                <th>QR Scan Count</th>
                <th>Total Links Clicked</th>
            </tr>
        </thead>
        <tbody id="qrAndLinksTable">
            {{#each qr_scans_per_product}}
            <tr>
                <td>{{this.product_name}}</td>
                <td>{{this.scan_count}}</td>
                <td>
                    {{#each ../links_clicked_per_product}}
                    {{#if (eq this.product_name ../this.product_name)}}
                    {{this.total_links_clicked}}
                    {{/if}}
                    {{/each}}
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>

    <!-- Chart for Total QR Scans -->
    <div class="chart-container">
        <canvas id="qrScanChart"></canvas>
    </div>
    <div class="chart-container">
        <canvas id="funnelChart"></canvas>
    </div>
    <div class="chart-container">
        <canvas id="stackedBarChart"></canvas>
    </div>

    <script>
        $(document).ready(function () {
            $("table").DataTable({
                pageLength: 5, // ðŸ”´ Set default rows per page to 5
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]], // ðŸ”„ Options for rows per page
            });
        });

        function fetchData() {
            const startDate = document.getElementById("startDate").value;
            const endDate = document.getElementById("endDate").value;
            const platform = document.getElementById("platform").value;

            $.ajax({
                url: "/getQRScanData",
                type: "GET",
                data: { startDate, endDate, platform },
                success: function (response) {
                    updateTables(response);
                    updateChart(response);
                },
                error: function () {
                    alert("Failed to fetch data");
                }
            });
        }

        function updateTables(data) {
            // Destroy existing DataTables instances
            if ($.fn.DataTable.isDataTable("table")) {
                $("table").DataTable().destroy();
            }

            // QR Scans Table
            let qrScanHtml = "";
            data.total_qr_scans.forEach(scan => {
                qrScanHtml += `<tr><td>${scan.date}</td><td>${scan.scan_count}</td></tr>`;
            });
            document.getElementById("qrScanTable").innerHTML = qrScanHtml;

            // Product Scans Table
            let productScanHtml = "";
            data.product_scans.day_wise.forEach(scan => {
                productScanHtml += `<tr><td>${scan.date}</td><td>${scan.scan_count}</td></tr>`;
            });
            document.getElementById("productScanTable").innerHTML = productScanHtml;

            // Product Wise Scans
            let productWiseHtml = "";
            data.product_scans.product_wise.forEach(product => {
                productWiseHtml += `<tr><td>${product.bought_product}</td><td>${product.scan_count}</td></tr>`;
            });
            document.getElementById("productWiseTable").innerHTML = productWiseHtml;

            // Platform Wise Scans
            let platformWiseHtml = "";
            data.product_scans.platform_wise.forEach(platform => {
                platformWiseHtml += `<tr><td>${platform.bought_from}</td><td>${platform.scan_count}</td></tr>`;
            });
            document.getElementById("platformWiseTable").innerHTML = platformWiseHtml;

            // QR Scans and Links Clicked Per Product
            let qrAndLinksHtml = "";
            data.qr_scans_per_product.forEach(qrScan => {
                const matchingLinkClick = data.links_clicked_per_product.find(link => link.product_name === qrScan.product_name);
                const totalLinksClicked = matchingLinkClick ? matchingLinkClick.total_links_clicked : 0;

                qrAndLinksHtml += `
        <tr>
            <td>${qrScan.product_name}</td>
            <td>${qrScan.scan_count}</td>
            <td>${totalLinksClicked}</td>
        </tr>`;
            });
            document.getElementById("qrAndLinksTable").innerHTML = qrAndLinksHtml;

            // Reinitialize DataTables
            $("table").DataTable({
                pageLength: 5, // ðŸ”´ Set default rows per page to 5
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]], // ðŸ”„ Options for rows per page
            });
        }

        let qrScanChartInstance = null;
        let funnelChartInstance = null;
        let stackedBarChartInstance = null;

        function updateChart(data) {
            const ctx = document.getElementById("qrScanChart").getContext("2d");
            const funnelCtx = document.getElementById("funnelChart").getContext("2d");
            const stackedCtx = document.getElementById("stackedBarChart").getContext("2d");

            // ðŸ”´ Destroy existing charts before creating new ones
            if (qrScanChartInstance) qrScanChartInstance.destroy();
            if (funnelChartInstance) funnelChartInstance.destroy();
            if (stackedBarChartInstance) stackedBarChartInstance.destroy();

            const labels = data.total_qr_scans.map(scan => scan.date);
            const qrScans = data.total_qr_scans.map(scan => scan.scan_count);
            const productClicks = data.product_scans.day_wise.map(scan => scan.scan_count);

            // âœ… Bar Chart (QR Scans)
            qrScanChartInstance = new Chart(ctx, {
                type: "bar",
                data: {
                    labels: labels,
                    datasets: [{
                        label: "QR Scans",
                        data: qrScans,
                        backgroundColor: "rgba(75, 192, 192, 0.2)",
                        borderColor: "rgba(75, 192, 192, 1)",
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: { beginAtZero: true }
                    }
                }
            });

            // âœ… Funnel Chart
            funnelChartInstance = new Chart(funnelCtx, {
                type: "funnel",
                data: {
                    labels: ["Total QR Scans", "Product Clicks"],
                    datasets: [{
                        label: "Conversion Funnel",
                        data: [qrScans.reduce((a, b) => a + b, 0), productClicks.reduce((a, b) => a + b, 0)],
                        backgroundColor: ["rgba(75, 192, 192, 0.7)", "rgba(255, 99, 132, 0.7)"]
                    }]
                }
            });

            // âœ… Stacked Bar Chart
            stackedBarChartInstance = new Chart(stackedCtx, {
                type: "bar",
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: "QR Scans",
                            data: qrScans,
                            backgroundColor: "rgba(75, 192, 192, 0.7)",
                        },
                        {
                            label: "Product Clicks",
                            data: productClicks,
                            backgroundColor: "rgba(255, 99, 132, 0.7)",
                        }
                    ]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: { stacked: true },
                        y: { stacked: true }
                    }
                }
            });
        }

    </script>

</body>

</html>